<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddMenses" xml:space="preserve">
    <value>Add Menses</value>
  </data>
  <data name="AppRestartingRequired" xml:space="preserve">
    <value>Application restarting required for the changes to take in effect</value>
  </data>
  <data name="April" xml:space="preserve">
    <value>April</value>
  </data>
  <data name="August" xml:space="preserve">
    <value>August</value>
  </data>
  <data name="CannotCreateDataBaseFile" xml:space="preserve">
    <value>Cannot create database file</value>
  </data>
  <data name="CannotDelDatabaseFile" xml:space="preserve">
    <value>Cannot delete the user database file.</value>
  </data>
  <data name="CannotOpenUserNamesFile" xml:space="preserve">
    <value>Cannot open user names file</value>
  </data>
  <data name="CannotSaveSettings" xml:space="preserve">
    <value>Cannot save settings to file</value>
  </data>
  <data name="ChangeMenses" xml:space="preserve">
    <value>Change Menses</value>
  </data>
  <data name="CycleChanging" xml:space="preserve">
    <value>Cycle modification</value>
  </data>
  <data name="December" xml:space="preserve">
    <value>December</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="endin" xml:space="preserve">
    <value>ending</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Err_CannotCreateNewCycleWhileOldOneIsNotEnded" xml:space="preserve">
    <value>Cannot create new Cycle while old one is not ended</value>
  </data>
  <data name="Err_CycleIsOverlappedWithExisting" xml:space="preserve">
    <value>The Cycle is overlapping with existing one</value>
  </data>
  <data name="Err_CycleIsTooLong" xml:space="preserve">
    <value>The Cycle is too long.</value>
  </data>
  <data name="Err_CycleShuldBeLongerThanOneDay" xml:space="preserve">
    <value>The Cycle shuld be longer than one day.</value>
  </data>
  <data name="Err_EndIsEarlierThanBegin" xml:space="preserve">
    <value>End of Cycle is earlier than its begining</value>
  </data>
  <data name="Err_NewRangeIsOverlappingWithOtherCycle" xml:space="preserve">
    <value>New range is overlapping with other Cycle</value>
  </data>
  <data name="Err_OneNotEndedCycleAlreadyExist" xml:space="preserve">
    <value>One not ended Cycle already exists</value>
  </data>
  <data name="Err_ShouldBeMoreThan10daysBetweenCycles" xml:space="preserve">
    <value>Should be more than 10 days between Cycles</value>
  </data>
  <data name="Err_TheCycleIsTooFar" xml:space="preserve">
    <value>The Cycle is too far from the current day.</value>
  </data>
  <data name="Err_TooOldDateForNotCompleteCycle" xml:space="preserve">
    <value>Too old date for a not complete cycle</value>
  </data>
  <data name="Err_YearShouldBeInRange" xml:space="preserve">
    <value>The year should be in range</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="February" xml:space="preserve">
    <value>February</value>
  </data>
  <data name="Fri" xml:space="preserve">
    <value>Fr</value>
  </data>
  <data name="January" xml:space="preserve">
    <value>January</value>
  </data>
  <data name="July" xml:space="preserve">
    <value>July</value>
  </data>
  <data name="June" xml:space="preserve">
    <value>June</value>
  </data>
  <data name="March" xml:space="preserve">
    <value>March</value>
  </data>
  <data name="May" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="mens" xml:space="preserve">
    <value>Mens</value>
  </data>
  <data name="MensesEndProbability" xml:space="preserve">
    <value>Menses ending probability {0}%</value>
  </data>
  <data name="MensesProbability" xml:space="preserve">
    <value>Menses begining probability {0}%</value>
  </data>
  <data name="Mon" xml:space="preserve">
    <value>Mo</value>
  </data>
  <data name="NewUserCreateSuccess" xml:space="preserve">
    <value>New user created successfully</value>
  </data>
  <data name="NoAccessToFile" xml:space="preserve">
    <value>Probably the file is locked</value>
  </data>
  <data name="notAvailable" xml:space="preserve">
    <value>n/a</value>
  </data>
  <data name="November" xml:space="preserve">
    <value>November</value>
  </data>
  <data name="October" xml:space="preserve">
    <value>October</value>
  </data>
  <data name="ovul" xml:space="preserve">
    <value>Fertile</value>
  </data>
  <data name="OvulationProbability" xml:space="preserve">
    <value>Fertile day probability {0}%</value>
  </data>
  <data name="RemoveMenses" xml:space="preserve">
    <value>Remove Menses</value>
  </data>
  <data name="Sat" xml:space="preserve">
    <value>St</value>
  </data>
  <data name="September" xml:space="preserve">
    <value>September</value>
  </data>
  <data name="Sun" xml:space="preserve">
    <value>Sn</value>
  </data>
  <data name="Thu" xml:space="preserve">
    <value>Th</value>
  </data>
  <data name="Tue" xml:space="preserve">
    <value>Tu</value>
  </data>
  <data name="TwoMinCyclesExplanation" xml:space="preserve">
    <value>
(You should record at least 2 cycles
in order to see more precise statistics)</value>
  </data>
  <data name="UserChangeSuccess" xml:space="preserve">
    <value>The user has been changed successfully</value>
  </data>
  <data name="UserHasBeenDeleted" xml:space="preserve">
    <value>The user has been removed</value>
  </data>
  <data name="WarnLastUserDelete" xml:space="preserve">
    <value>You can not remove the last user</value>
  </data>
  <data name="Wed" xml:space="preserve">
    <value>Wd</value>
  </data>
</root>